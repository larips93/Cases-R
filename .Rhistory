numeros
numeros
Numeros # note que houve um erro, não existe o objeto Numeros (maiúscula)
print(numeros)
pessoas <- c("João", "Maria", "Pedro", "Paula")
numeros2 <- c("1", "2", "3", "4", "5")
logico <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE)
logico_2 <- c(T, F, T, T, F, F)
class(numeros)
class(pessoas)
class(logico)
length(numeros)
length(pessoas)
length(logico)
sequencia <- c(1:10) # esta é uma forma de gerar uma sequência de números
varios_1 <- c(1, 2, 3, "Azul", "Verde", "Vermelho", TRUE, FALSE, TRUE)
class(varios_1)
print(varios_1)
varios_2 <- c(425, 426, 427, TRUE, FALSE, FALSE)
class(varios_2)
print(varios_2)
numeros == 1
numeros * 2
triplo_numeros <- numeros * 3
metade_numeros <- numeros / 2
pessoas != "João"
sequencia > 550
sequencia >= 598
sequencia > 100
sequencia <= 100
altura <- factor(c("alto", "médio", "alto", "baixo", "médio", "alto"),
levels = c("baixo", "médio", "alto"),
labels = c("prédios baixos",
"prédios médios",
"prédios altos"))
class(altura)
altura
respostas <- factor(c(1, 2, 2, 3, 1, 2, 3, 3, 1, 2, 1, 1, 3, 2, 3),
levels = c(1, 2, 3),
labels = c("discordo totalmente",
"não concordo, nem discordo",
"concordo totalmente"))
class(respostas)
respostas
banco_dados_um <- data.frame(var1 = c("pessoa 1", "pessoa 2", "pessoa 3"),
var2 = c(42, 55, 28))
print(banco_dados_um)
View(banco_dados_um)
View(banco_dados_um)
View(banco_dados_um)
View(banco_dados_um)
variavel_um <- c(1:10)
variavel_dois <- c(11:18, NA, NA)
variavel_tres <- c("a","b","c","d","e","f","g","h","i","j")
banco_dados_dois <- data.frame(variavel_um, variavel_dois, variavel_tres)
View(banco_dados_dois)
banco_dados_tres <- data.frame(posicao = variavel_um,
faltam = variavel_dois,
letras = variavel_tres)
View(banco_dados_dois)
load("(2) desempenho_aluno_escola.RData")
library(readxl)
preco <- read_excel("(2) precos_acao.xlsx")
View(preco)
View(banco_dados_dois)
dolar <- read.csv("https://olinda.bcb.gov.br/olinda/servico/PTAX/versao/v1/odata/CotacaoDolarPeriodo(dataInicial=@dataInicial,dataFinalCotacao=@dataFinalCotacao)?@dataInicial='01-01-2020'&@dataFinalCotacao='12-31-2022'&$top=10000&$format=text/csv&$select=cotacaoCompra,cotacaoVenda,dataHoraCotacao",
sep = ",")
banco_dados_um <- data.frame(var1 = c("pessoa 1", "pessoa 2", "pessoa 3"),
var2 = c(42, 55, 28))
print(banco_dados_um)
variavel_um <- c(1:10)
variavel_dois <- c(11:18, NA, NA)
variavel_tres <- c("a","b","c","d","e","f","g","h","i","j")
banco_dados_dois <- data.frame(variavel_um, variavel_dois, variavel_tres)
banco_dados_tres <- data.frame(posicao = variavel_um,
faltam = variavel_dois,
letras = variavel_tres)
View(banco_dados_um)
View(banco_dados_tres)
View(banco_dados_dois)
load("(2) desempenho_aluno_escola.RData")
View(desempenho_aluno_escola)
library(readxl)
preco <- read_excel("(2) precos_acao.xlsx")
View(preco)
pib_paises <- read.csv("(2) pib_paises.csv",
sep = ",",
dec = ".")
View(pib_paises)
dolar <- read.csv("https://olinda.bcb.gov.br/olinda/servico/PTAX/versao/v1/odata/CotacaoDolarPeriodo(dataInicial=@dataInicial,dataFinalCotacao=@dataFinalCotacao)?@dataInicial='01-01-2020'&@dataFinalCotacao='12-31-2022'&$top=10000&$format=text/csv&$select=cotacaoCompra,cotacaoVenda,dataHoraCotacao",
sep = ",")
View(dolar)
library(readxl)
X_2_tempo_dist <- read_excel("(2) tempo_dist.xls")
View(X_2_tempo_dist)
library(haven)
X_2_notas_fatorial <- read_sav("(2) notas_fatorial.sav")
View(X_2_notas_fatorial)
save(banco_dados_um, file = "(3) dados_salvos_1.RData")
install.packages("writexl")
library("writexl")
write_xlsx(banco_dados_dois,"(3) dados_salvos_2.xlsx")
write.csv(banco_dados_tres, file = "(3) dados_salvos_3.csv", row.names = F)
load("(2) desempenho_aluno_escola.RData") # Se já estiver carregada, não precisa
View(desempenho_aluno_escola)
head(desempenho_aluno_escola, n = 10)
names(desempenho_aluno_escola)
nrow(desempenho_aluno_escola) # observações (linhas)
ncol(desempenho_aluno_escola) # variáveis (colunas)
dim(desempenho_aluno_escola) # ambos juntos (linhas, colunas)
str(desempenho_aluno_escola)
desempenho_aluno_escola$desempenho # Somente o print da variável
View(desempenho_aluno_escola)
horas_estudo <- desempenho_aluno_escola$horas # Armazenando em um vetor
rm(horas_estudo)
View(desempenho_aluno_escola)
# Qual é o valor do desempenho escolar (variável na 3ª coluna) do 1º aluno?
desempenho_aluno_escola[1 , 3]
# Quais são os valores de todas as variáveis do 5º aluno?
desempenho_aluno_escola[5 , ]
# Quais são os valores de todas as variáveis para os alunos de 7 a 12?
desempenho_aluno_escola[c(7:12), ]
# Quais são as observações para a variável da 6ª coluna (tipo de escola?)?
desempenho_aluno_escola[ , 6]
# No caso acima, também poderia ser indicada pelo nome da variável
desempenho_aluno_escola[ , "priv"]
# Poderíamos reorganizar a ordem das variáveis
reorganiza <- desempenho_aluno_escola[ , c(2,5,3,4,1,6)]
View(reorganiza)
# Vamos armazenar somente as variáveis estudante (id), desempenho e horas
parte_dados <- desempenho_aluno_escola[ , c("estudante", "desempenho", "horas")]
View(parte_dados)
# As variáveis "horas" e "tempo de experiência" poderiam ser excluídas
novos_dados_1 <- desempenho_aluno_escola[ , -c(4,5)]
View(novos_dados_1)
# Supondo que não vamos analisar as linhas de 476 até 522
novos_dados_2 <- desempenho_aluno_escola[ -c(476:522), ]
View(novos_dados_2)
novos_dados_2 <- novos_dados_2 [,-c(5,6)]
View(novos_dados_2)
desempenho_aluno_escola[desempenho_aluno_escola$desempenho > 50,]
desempenho_aluno_escola[desempenho_aluno_escola$priv == "pública",]
desempenho_aluno_escola[desempenho_aluno_escola$priv == "pública" &
desempenho_aluno_escola$desempenho <= 20,]
desempenho_aluno_escola[desempenho_aluno_escola$escola != "A",]
seleciona_escolas <- desempenho_aluno_escola[desempenho_aluno_escola$escola == "C" |
desempenho_aluno_escola$escola == "H",]
View(seleciona_escolas)
pib_paises <- read.csv("(2) pib_paises.csv",
sep = ",",
dec = ".")
pib_paises <- pib_paises[-c(267:271),-c(2,4)]
View(pib_paises)
nomes <- c("ano","paises_regioes","var_pib_capita","var_pib_total")
nomes <- c("ano","paises_regioes","var_pib_capita","var_pib_total")
names(pib_paises) <- nomes
View(pib_paises)
pib_paises$var_pib_capita_ajust <- as.numeric(pib_paises$var_pib_capita)
View(pib_paises)
pib_paises$var_pib_total_ajust <- as.numeric(pib_paises$var_pib_total)
View(pib_paises)
summary(pib_paises$var_pib_capita_ajust)
summary(pib_paises$var_pib_total_ajust)
atualizar <- function(histórico) {
atual <- ((histórico + 17)/2)
return(atual)
}
atualizar(1)
atualizar(2)
atualizar(3)
atualizar(4)
View(atualizar)
atualizar_hoje <- c(1:15)
atualizar(atualizar_hoje)
atualizados <- atualizar(atualizar_hoje)
atualizar(atualizar_hoje)
atualizados <- atualizar(atualizar_hoje)
print(atualizados)
ajustar <- function(valor1, valor2) {
ajuste <- ((valor1 + 180)/(valor2 - 60))
return(ajuste)
}
ajustar(100, 80)
ajustar(200, 80)
ajustar(200, 100)
ajustar("a",50)
valor <- 100000
if (valor >= 1000000) {
"número grande"
} else {
"número pequeno"
}
valor <- 650000
if (valor >= 1000000) {
"número grande"
} else if (valor >= 500000 & valor <1000000) {
"número intermediário"
} else {
"número pequeno"
}
valor <- 650000
if (valor >= 1000000) {
"número grande"
} else if (valor >= 500000 & valor <1000000) {
"número intermediário"
} else {
"número pequeno"
}
atualizar_teto <- function(histórico) {
atual <- ((histórico + 17)/2)
if (atual <= 100) {
return(atual)}
else {
return("Atualizado no Teto = 100")}
}
atualizar_teto(44)
atualizar_teto(199)
ajustar_mult
ajustar_mult <- function(valor1, valor2) {
ajustar_mult <- function(valor1, valor2) {
ajuste <- ((valor1 + 180)/(valor2 - 60))
if(ajuste <= 100) {
return("baixo")}
else if(ajuste > 100 & ajuste <= 1000) {
return("médio")}
else {
return("alto")}
}
ajustar_mult(500, 300) # resultado = 2,8333
ajustar_mult(50000,100) # resultado = 1.254,50
ajustar_mult(1000, 70) # resultado = 118
ajustar_mult <- function(valor1, valor2) {
ajuste <- ((valor1 + 180)/(valor2 - 60))
if(ajuste <= 100) {
return("baixo")}
else if(ajuste > 100 & ajuste <= 1000) {
return("médio")}
else {
return("alto")}
}
ajustar_mult(500, 300) # resultado = 2,8333
ajustar_mult <- function(valor1, valor2) {
ajuste <- ((valor1 + 180)/(valor2 - 60))
if(ajuste <= 100) {
return("baixo")}
else if(ajuste > 100 & ajuste <= 1000) {
return("médio")}
else {
return("alto")}
}
ajustar_mult(500, 300) # resultado = 2,8333
ajustar_mult(50000,100) # resultado = 1.254,50
ajustar_mult(1000, 70) # resultado = 118
médias <- function(x) {
media <- mean(x, na.rm = T)
return(media)
}
médias <- function(x) {
media <- mean(x, na.rm = T)
return(media)
}
valores <- c(1, 4, 6, 9, 12, 16)
médias(valores)
for (i in atualizar_hoje) {
print((i + 17)/2)
}
resultados <- list()
for (i in atualizar_hoje) {
resultados[[i]] <- ((i + 17)/2)
}
resultados[[5]]
resultados
resultados[[5]]
valores <- 2
while(valores < 100){
valores <- (valores + 20)
print(valores)
}
novos_result <- c()
while(valores < 100){
valores <- (valores + 20)
novos_result <- c(novos_result, valores)
print(valores)
}
print(novos_result)
while(valores < 100){
valores <- (valores + 20)
novos_result <- c(novos_result, valores)
print(valores)
}
print(novos_result)
novos_result <- c()
valores <- 2
while(valores < 100){
valores <- (valores + 20)
novos_result <- c(novos_result, valores)
print(valores)
}
print(novos_result)
install.packages(c("plotly","reshape2","ggrepel","rgl","car","sf","esquisse"))
options(rgl.debug = TRUE)
library(plotly)
library(reshape2)
library(ggrepel)
library(rgl)
library(car)
library(sf)
library(esquisse)
load("(2) perfil_investidor.RData")
View(perfil_investidor)
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil))
perfil_investidor$perfil <- factor(perfil_investidor$perfil,
levels = c("Conservador",
"Moderado",
"Agressivo"))
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil))
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil)) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020")
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), fill = "blue") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020")
colours()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020")
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
theme_dark()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
geom_text(aes(x = perfil, label = ..count..), stat = "count", vjust = 2) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
theme_light()
ggplot(data = perfil_investidor) +
geom_bar(aes(x = perfil), color = "red", fill = "blue") +
geom_text(aes(x = perfil, label = ..count..), stat = "count", hjust = -1) +
labs(title = "Perfil dos Investidores",
subtitle = "Banco X",
x = "Perfil do Investidor",
y = "Quantidade",
caption = "Período: 2020") +
coord_flip() +
theme_light()
load("(2) desempenho_aluno_escola.RData")
View(desempenho_aluno_escola)
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho))
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho), color = "black", fill = "light green") +
labs(x = "Desempenho Escolar",
y = "Frequência") +
theme_bw()
ggplot(data = desempenho_aluno_escola) +
geom_histogram(aes(x = desempenho), color = "black", fill = "light green", bins = 50) +
labs(x = "Desempenho Escolar",
y = "Frequência") +
theme_bw()
load("(2) atlas_ambiental.RData")
View(atlas_ambiental)
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade))
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade, size = idade))
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade, size = idade, color = favel < 6))
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade,
size = idade, color = favel < 6,
shape = mortalidade > 18)) +
labs(title = "Indicadores dos Distritos do Município de São Paulo",
x = "Renda",
y = "Escolaridade") +
theme_bw()
ggplot(atlas_ambiental) +
geom_point(aes(x = renda, y = escolaridade,
size = idade, color = favel < 6,
shape = mortalidade > 18)) +
geom_smooth(aes(x = renda, y = escolaridade), method = "loess", se = FALSE) +
labs(title = "Indicadores dos Distritos do Município de São Paulo",
x = "Renda",
y = "Escolaridade") +
theme_bw()
library(readxl)
preco_acao <- read_excel("(2) precos_acao.xlsx")
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao))
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
geom_point(aes(x = data, y = preco, color = acao)) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
geom_point(aes(x = data, y = preco, color = acao)) +
geom_text(aes(x = data, y = preco, label = preco), size = 3, vjust = 2, angle = 45) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
ggplotly(
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
geom_point(aes(x = data, y = preco, color = acao)) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
)
library(readxl) # Se já tiver carregado antes, não precisa fazer novamente
tempo_dist <- read_excel("(2) tempo_dist.xls")
correlacoes <- cor(tempo_dist[, 2:4])
correlacoes
ggplotly(
ggplot(preco_acao) +
geom_line(aes(x = data, y = preco, color = acao)) +
geom_point(aes(x = data, y = preco, color = acao)) +
labs(x = "Mês de Referência",
y = "Cotação de Fechamento",
title = "Série Histórica das Ações",
color = "Empresa") +
theme_classic()
)
library(readxl) # Se já tiver carregado antes, não precisa fazer novamente
tempo_dist <- read_excel("(2) tempo_dist.xls")
correlacoes <- cor(tempo_dist[, 2:4])
correlacoes
correlacoes_reorg <- melt(correlacoes)
View(correlacoes_reorg)
ggplot(correlacoes_reorg) +
geom_tile(aes(x = Var1, y = Var2, fill = value)) +
labs(x = "Variáveis",
y = "Variáveis",
fill = "Coef. Correl.")
ggplot(correlacoes_reorg) +
geom_tile(aes(x = Var1, y = Var2, fill = value)) +
geom_text(aes(x = Var1, y = Var2, label = value), size = 5) +
labs(x = "Variáveis",
y = "Variáveis",
fill = "Coef. Correl.") +
scale_fill_gradient2(low = "blue",
mid = "yellow",
high = "red",
midpoint = 0)
ggplotly(
ggplot(correlacoes_reorg) +
geom_tile(aes(x = Var1, y = Var2, fill = value)) +
geom_text(aes(x = Var1, y = Var2, label = value), size = 5) +
labs(x = "Variáveis",
y = "Variáveis",
fill = "Coef. Correl.") +
scale_fill_gradient2(low = "blue",
mid = "yellow",
high = "red",
midpoint = 0)
)
load("(2) atlas_ambiental.RData")
var_boxplot <- atlas_ambiental[,c(1,3)]
ggplot(var_boxplot) +
geom_boxplot(aes(y = renda), fill = "gray", color = "blue") +
labs(x = "Renda",
y = "Valores")
ggplotly(
ggplot(var_boxplot) +
geom_boxplot(aes(y = renda), fill = "gray", color = "blue") +
labs(x = "Renda",
y = "Valores")
)
esquisser(atlas_ambiental, viewer = "browser")
